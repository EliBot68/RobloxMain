-- UIManager.client.luau
-- Centralized UI management that coordinates between MainGameController and UIHandler
-- Ensures proper UI state synchronization and RemoteEvent handling

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

local UIManager = {}

-- UI Controllers
local UIHandler = nil
local MainGameController = nil

-- State tracking
local isInitialized = false

function UIManager:Init()
    print("üéõÔ∏è Initializing UI Manager...")
    
    -- Load UI controllers
    self:LoadControllers()
    
    -- Setup coordination
    self:SetupCoordination()
    
    isInitialized = true
    print("‚úÖ UI Manager initialized!")
end

function UIManager:LoadControllers()
    print("üì¶ Loading UI controllers...")
    
    -- Load UIHandler
    local uiSuccess, uiHandler = pcall(function()
        return require(script.Parent.ui.UIHandler)
    end)
    
    if uiSuccess then
        UIHandler = uiHandler
        print("‚úÖ UIHandler loaded")
    else
        warn("‚ùå Failed to load UIHandler")
    end
    
    -- Load MainGameController
    local mainSuccess, mainController = pcall(function()
        return require(script.Parent.MainGameController)
    end)
    
    if mainSuccess then
        MainGameController = mainController
        print("‚úÖ MainGameController loaded")
    else
        warn("‚ùå Failed to load MainGameController")
    end
end

function UIManager:SetupCoordination()
    print("üîó Setting up UI coordination...")
    
    -- Ensure both controllers are properly connected
    if UIHandler and MainGameController then
        -- The UIHandler already connects to RemoteEvents directly,
        -- so we just need to ensure they're both active
        print("‚úÖ UI coordination setup complete!")
    else
        warn("‚ö†Ô∏è Some UI controllers failed to load")
    end
end

-- Public API for external access
function UIManager:GetUIHandler()
    return UIHandler
end

function UIManager:GetMainGameController()
    return MainGameController
end

function UIManager:IsInitialized()
    return isInitialized
end

-- Initialize automatically
UIManager:Init()

return UIManager
